# Installs & configures Nginx in a single-machine deployment.

# Install Nginx
- name: Install Nginx
  apt:
    name: nginx
    update_cache: true
    state: present
  become: yes

- name: Stop Nginx service and ensure it's enabled
  systemd:
    name: nginx
    enabled: yes
    state: stopped
  become: yes

# Set custom log rotation
- name: Build & copy Nginx configuration templates
  template:
    src: "templates/logrotate_nginx"
    dest: "/etc/logrotate.d/nginx"
  become: yes

# Configure & enable Nginx
- name: Disable default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Build & copy Nginx configuration templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "templates/nginx.conf", dest: "/etc/nginx/nginx.conf" }
    - { src: "templates/frontend.conf", dest: "/etc/nginx/sites-available/frontend.conf" }
    - { src: "templates/backend.conf", dest: "/etc/nginx/sites-available/backend.conf" }
  become: yes
  
- name: Copy static Nginx configuration files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "files/forwarded_header", dest: "/etc/nginx/conf.d/forwarded_header" }
  become: yes

- name: Enable frontend & backend sites
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: "/etc/nginx/sites-available/frontend.conf", dest: "/etc/nginx/sites-enabled/frontend.conf" }
    - { src: "/etc/nginx/sites-available/backend.conf", dest: "/etc/nginx/sites-enabled/backend.conf" }
  become: yes

# Start Nginx if SSL certificate & key exist, otherwise this will trigger an error
- name: Check if SSL certificate is present on the machine
  stat:
    path: /etc/ssl/site.crt
  register: site_crt
  become: yes

- name: Start Nginx
  systemd:
    name: nginx
    enabled: yes
    state: restarted
  when: site_crt.stat.exists
  become: yes
