# Environment variables for deployment configuration
# NOTE: python-dotenv, used in monitoring scripts, adds some limitations on the shell syntax:
# 1) semicolons at the line end should not be used (quoted values won't be parsed, and unquoted will contain the semicolon)
# 2) variables used in other variables must be included in curly brackets in order to be expanded, e.g.:
#       export VAR="/text/${OTHER_VAR}/more_text"
# 3) shell path expansions should be avoided (home dir shortcut '~', etc.)

# Server settings
export SERVER_ADDR=192.168.1.68                # Production server
export SERVER_SSH_PORT=22                             # Production server SSH port
export SERVER_URLS="server.url server2.url"    # Space-separated server URLs without protocol prefixes
export CERTBOT_REGISTRATION_EMAIL="admin@example.com" # Email address to be provided for certbot during certificate generation
export DEFAULT_ROOT_PASSWORD=password          # Default password of server root user
export ROOT_PASSWORD=password                  # Password to be set for root user during server security configuration

export ADMIN_USER_NAME=admin_user              # Administration user for tasks not performed via `DEPLOYMENT_USER_NAME` account
export ADMIN_USER_PASSWORD=password
export ADMIN_USER_KEY_PATH=/path/to/key        # Path to SSH public key to be added for admin user on the server

export DEPLOYMENT_USER_NAME=deployment_user    # User to be created and used for running playbooks (except for initial server configuration) & other automated tasks
export DEPLOYMENT_USER_PASSWORD=password
export DEPLOYMENT_USER_KEY_PATH=/path/to/key   # Path to SSH public key to be added for deployment user on the server

export SITE_USER=site_user                     # Production server user for running backend & scheduled database operations

export SITE_STATIC_FILES_GROUP=site_static_files   # Group with read & write access for the static files folder

# General
export LOCAL_SITE_FOLDER=/home/user/dev/projects/site   # Local folder with site projects (frontend, backend, deployment)
export SERVER_FRONTEND_FOLDER=/site/frontend   # Production server frontend folder
export SERVER_BACKEND_FOLDER=/site/backend     # Production server backend folder
export STATIC_FILES_FOLDER=/site_static_files  # Folder with statis files, which is symlinked inside $SERVER_FRONTEND_FOLDER
export SITE_BACKEND_SERVICE_NAME=site_backend  # Name of backend service
export FRONTEND_REPOSITORY='https://github.com/gsoldatov/site_frontend.git'
export BACKEND_REPOSITORY='https://github.com/gsoldatov/site_backend.git'

# Dependencies
export NODE_VERSION=v16.16.0
export NODE_DISTRO=linux-x64
export PYTHON_VERSION=3.10
export POSTGRESQL_VERSION=14

# Exposed frontend & backend ports
export SERVER_FRONTEND_HTTP_PORT=80
export SERVER_FRONTEND_HTTPS_PORT=443
export SERVER_BACKEND_HTTP_PORT=20080
export SERVER_BACKEND_HTTPS_PORT=20443

# Nginx settings
export NGINX_ACCESS_LOG_PATH=/var/log/nginx/access.log
export NGINX_ERROR_LOG_PATH=/var/log/nginx/error.log
export NGINX_SSL_CERTIFICATE_PATH=/etc/ssl/site.crt
export NGINX_SSL_CERTIFICATE_KEY_PATH=/etc/ssl/site.key

# Frontend settings
export FRONTEND_SETTING_EXPRESS_PORT=5000      # Express.js server ports for serving frontend files instead of Nginx

# Backend settings, app
export BACKEND_SETTING_APP_HOST=127.0.0.1      # Host & port, which are listened by app server
export BACKEND_SETTING_APP_PORT=42002
export BACKEND_SETTING_USE_FORWARDED=true      # Flag indicating if a reverse proxy is placed before app server
export BACKEND_SETTING_DEBUG=false             # Enable/disable stacktrace display by aiohttp loggers for 500 errors
export BACKEND_SETTING_DEFAULT_USER_LOGIN='admin'          # Default app user data
export BACKEND_SETTING_DEFAULT_USER_PASSWORD='password'
export BACKEND_SETTING_DEFAULT_USER_USERNAME='Admin'
export BACKEND_SETTING_TOKEN_LIFETIME=604800   # User access token lifetime
export BACKEND_SETTING_MAX_HIERARCHY_DEPTH=6   # Maximum allowed hierarchy of 'chapters' composite objects, including root object

# Backend settings, database
export BACKEND_SETTING_DB_DATABASE_HOST=localhost
export BACKEND_SETTING_DB_DATABASE_PORT=5432
export BACKEND_SETTING_DB_INIT_DATABASE='postgres'     # Default db and superuser (non-default values not supported)
export BACKEND_SETTING_DB_INIT_USERNAME='postgres'
export BACKEND_SETTING_DB_INIT_PASSWORD='password'
export BACKEND_SETTING_DB_DATABASE='dbname'              # App database and user, which runs queries
export BACKEND_SETTING_DB_USERNAME='dbuser'
export BACKEND_SETTING_DB_PASSWORD='password'

# Backend settings, search
export BACKEND_SETTING_ENABLE_SEARCHABLE_UPDATES=true  # Enable/disable processing data for search

# Backend settings, logging
export BACKEND_SETTING_LOGGING_FOLDER=logs
export BACKEND_SETTING_LOGGING_FILE_SEPARATOR=';'
export BACKEND_SETTING_LOGGING_FILE_SEPARATOR_REPLACEMENT=','

export BACKEND_SETTING_LOGGING_APP_EVENT_LOGGING_MODE=file                 # logging modes can be one of 'file', 'stdout' or 'off'
export BACKEND_SETTING_LOGGING_APP_EVENT_LOGGING_FILE_MODE_INTERVAL=86400  # file mode log rotation interval in seconds
export BACKEND_SETTING_LOGGING_APP_EVENT_LOGGING_MAX_FILE_COUNT=50         # maximum number of most recent log files kept on the server

export BACKEND_SETTING_LOGGING_APP_ACCESS_LOGGING_MODE=file
export BACKEND_SETTING_LOGGING_APP_ACCESS_LOGGING_FILE_MODE_INTERVAL=86400
export BACKEND_SETTING_LOGGING_APP_ACCESS_LOGGING_MAX_FILE_COUNT=50         # maximum number of most recent log files kept on the server

export BACKEND_SETTING_LOGGING_DB_LOGGING_MODE=stdout
export BACKEND_SETTING_LOGGING_SCHEDULED_LOGGING_MODE=file
export BACKEND_SETTING_LOGGING_SCHEDULED_LOGGING_MAX_FILE_COUNT=100         # maximum number of most recent log files kept on the server

# Deployment, common
export REMOTE_TEMP_FOLDER="/home/${DEPLOYMENT_USER_NAME}/site_deployment_temp"    # Directory for temp files created during backup & monitoring data fetches
export LOCAL_TEMP_FOLDER="temp" # Local folder for temporary files, absolute or relative to `monitoring` directory

# Deployment > backup settings
export BACKUP_LOCAL_FOLDER="/path/to/local/backup/folder"        # NOTE: avoid using paths relative to home dir of current user, because folder is created using sudo
export BACKUP_LOG_FOLDER="/path/to/backup/tasks/logs/folder"     # Should be added to .gitignore if set to repo subdir
export BACKUP_SCRIPT_LOG_FILENAME="backup_script.log"    # Main script log name
export BACKUP_LOG_FILE_SEPARATOR=";"
export BACKUP_SCRIPT_LOG_MAX_SIZE=100k     # Max size of a backup script log file (a.k.a. `size` param for logrotate; number can be followed by a suffix (k, M, G))
export BACKUP_SCRIPT_KEEP_LOG_FILES=10     # Max count of rotated backup script log files

export BACKUP_DB_DUMP_FILENAME="db_backup.tar"
export BACKUP_DB_MAX_BACKUP_COUNT=10    # Max count of database backup copies; if set to 0, disables backups
export BACKUP_DB_MIN_INTERVAL=10079    # Minimum interval between backup saves in minutes (10080 = 1 week, 1 min less to avoid delays)
export BACKUP_DB_ANSIBLE_LOG_FILENAME="ansible_backup_db"  # Log filename template for Ansible playbook executed during db backup
export BACKUP_DB_ANSIBLE_KEEP_LOG_FILES=100    # Max count of files kept

export BACKUP_STATIC_FILES_LOCAL_FOLDER="/path/to/local/static/files/backup/folder" # rsync will create a subdirectory inside this folder
export BACKUP_STATIC_FILES_MAX_BACKUP_COUNT=10  # Max count of saved static files backups; if set to 0, disables static files backup
export BACKUP_STATIC_FILES_ANSIBLE_LOG_FILENAME="ansible_backup_static_files"  # Log filename template for Ansible playbook executed during static files backup
export BACKUP_STATIC_FILES_ANSIBLE_KEEP_LOG_FILES=100    # Max count of files kept

# Deployment > monitoring settings
export MONITORING_LOGGING_MODE=db   # 'db' or 'stdout', for logging monitoring jobs into the respective destination

# Postgresql server address & port for monitoring database
# (expected to be installed & running; not test for remote hosts)
export MONITORING_DB_HOST=localhost
export MONITORING_DB_PORT=5432

export MONITORING_INIT_DB_NAME='postgres'      # Default database to connect to
export MONITORING_INIT_DB_USERNAME='postgres'  # DB superuser used to create monitoring db & user
export MONITORING_INIT_DB_PASSWORD='password'
export MONITORING_DB_NAME='dbname'             # Monitoring database name
export MONITORING_DB_USERNAME='dbuser'         # Monitoring database owner & user for data fetching/querying
export MONITORING_DB_PASSWORD='password'
